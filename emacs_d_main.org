#+STARTUP: overview

* main

** installing packages workflow

Don't use MELPA. +Clone+ Copy raw directly from git into modes. The function in init.el already insures that everything in modes/ is in the load-path.

+If changes are made to the git repositories in modes, those will need to be committed within their repositories first.+ Just add it to the repository and work from there.


* top

** jump between org-mode views efficiently?
I'm thinking of a keyboard shortcut such as
: C-v(iew) c  ---> content
: C-v(iew) a  ---> unfolded (all)
: etc.
How to do?

** use of TRAMP
: C-x C-f /ssh:xxxx@login.....de:comp/

** org-mode references - important!

** C-k does not move cursor in terminal - jumps back
Q: How can I rebind moving the pointer backwards (backward-char) in multi-term? I have found 'term-bind-key-alist', but moving the pointer doesn't seem among the bindings. Remapping backward-char globally does move the pointer, but when new input is given it jumps back to the original position. Basically, I want to remap C-b in multi-term.

This might help: [[https://www.reddit.com/r/emacs/comments/4ccczt/keybindings_in_multiterm/][r/emacs]]

** color themes

*** concentrating on two themes for now:
**** sanityinc tomorrow (latest)
swapped outline order
**** sanityinc solarized-dark (which)?
outline1 -> blue

*** how tos
**** change org-mode headline colors:
change ~outline~ parameters!

** org-mode HTML export images in row
#+BEGIN_SRC question
 To have images display in a row after exporting to html, I'm supposed to use the "inline" style attribute (http://orgmode.org/worg/org-tutorials/images-and-xhtml-export.html). Is this tutorial out of date? It doesn't seem to work for me at all. I get separate divs and paragraphs and within them the image tags in the exported html, which doesn't display in a row, of course.
#+END_SRC

** Latex highlight in org-mode 
underscore_problematic
#+BEGIN_SRC 
#+OPTIONS: ^:nil
#+END_SRC
does work, but
#+BEGIN_SRC
;; disable underscore (subscript) and ^ (superscript) highlight and export
(setq org-export-with-sub-superscripts nil)
#+END_SRC
in init.el does not

** hydra - buffers?
[[https://github.com/seanirby/dotfiles/blob/master/.emacs.d/init.el#L310-L397][github code]]

** smooth scrolling with inline images in org-mode
[[http://emacs.stackexchange.com/questions/10354][Emacs SE question]]

** run commands on "buffer save"
[[https://github.com/wasamasa/firestarter][firestarter]] (originally tweeted by Stephen Eglen)

** clean up mode line (hide minor modes?)
[[http://emacs.stackexchange.com/questions/3925/hide-list-of-minor-modes-in-mode-line][SO question]]

** syntax highlighting for Markdown .md files

** Emacs spellchecking with ispell/flyspell and Aspell
references: [[http://emacs.stackexchange.com/questions/2167/what-options-are-there-for-doing-spell-checking-in-emacs][Emacs SE]], [[https://joelkuiper.eu/spellcheck_emacs][joelkuiper.eu]]

*** multiple dictionaries
[[http://stackoverflow.com/questions/3910056/aspell-under-emacs-multiple-dictonaries][Stackoverflow question]]

*** set English dictionary to British English.

*** ignore email addresses and URLs 

*** Flyspell/ispell
- how synchornize gnu aspell dictionary?
- how to use with keybindings only?
*** For now:
- enabled in org-mode
- uses personal dictionary at dict/.aspell.en.pws
- check word with ~ispell-word~
- press "i" to insert to dictionary

** fancier Emacs mode line?
https://github.com/Malabarba/smart-mode-line/

** Emacs perspectives
https://github.com/nex3/perspective-el/tree/master

** remap C-j to RET

** for emacs: ido-hacks?

** After C-c C-2 pointer jumps to of buffer

** disable C-w that deletes whole sections

** find better alternative to M-w for copy

** open recent files + smart file search using recent/frequently used files

** LaTex mode: C-c ; to comment/uncomment
Maybe AucTeX?

** Python mode: C-c ; to comment/uncomment

** Better text writing
reference: [[http://emacs.stackexchange.com/questions/2171/what-options-are-there-for-writing-better-non-programming-text-in-emacs][Emacs SE]]
*** langtool
doesn't work on the fly. maybe write custom save function for org-mode that first invokes the language check?

** Better shell
- Better shell: [[https://snarfed.org/why_i_dont_run_shells_inside_emacs][snarfed.org]]

** indent org-mode src blocks?
Probably not, but see [[https://www.reddit.com/r/emacs/comments/415imd/prettier_orgmode_source_code_blocks/][/r/emacs]] post.

** paper links for org-mode: [[file+sys:~/lib/articles/Song2005.pdf][Song2005]]
Author2005 --> file+sys:~/lib...
Implement either via:
  - Keyboard shortcut (like link insert)
  - (better) automatic conversion (Regexp)

Also see [[http://draketo.de/light/english/free-software/custom-link-completion-org-mode-25-lines-emacs][blog post]] doing something similar

** Emacs Magit

** Org mode html export with Jupyter?
https://github.com/gregsexton/ob-ipython

** Emacs Ipython
https://www.youtube.com/watch?v=dgcBKz03lK8

** minibuffer
“Command attempted to use minibuffer while in minibuffer”
[[http://stackoverflow.com/questions/812135/emacs-modes-command-attempted-to-use-minibuffer-while-in-minibuffer][Stackoverflow Question]]

** Code highlighting in #+BEGIN_HTML ... #+END_HTML
[[http://emacs.stackexchange.com/questions/18741/how-to-syntax-highlight-begin-html-environment-in-org-mode-buffer][Emacs SE question]]

** moving things without arrow keys
http://emacs.stackexchange.com/questions/5366/org-mode-sans-arrow-keys

** completion when inserting links

*** two ways:
C-u C-c C-l or
C-c C-l type "file:"

*** Chat

(18:41:30) realitygaps [~realityga@2a01:4a0:3::5096:aeb] entered the room.
(18:41:30) realitygaps left the room (quit: Changing host).
(18:41:30) realitygaps [~realityga@unaffiliated/realitygaps] entered the room.
(18:41:36) sachac: truthling: Oh! org-get-outline-path might be handy, too.
(18:44:46) rpg [~rpg@162-219-230-36.fttp.usinternet.com] entered the room.
(18:54:30) jhulten [~jhulten@c-174-61-252-243.hsd1.wa.comcast.net] entered the room.
(18:55:05) thomases left the room (quit: Ping timeout: 276 seconds).
(19:00:44) coventry left the room (quit: Remote host closed the connection).
(19:04:50) Kundry_Wag left the room (quit: Ping timeout: 276 seconds).
(19:10:41) Kundry_Wag [~user@189.62.3.248] entered the room.
(19:20:17) PetrVod left the room (quit: Ping timeout: 250 seconds).
(19:21:21) mikarch [~Mikkel@85.218.244.93] entered the room.
(19:22:09) PetrVod [~vodicka@132.183.13.75] entered the room.
(19:25:39) truthling left the room (quit: Ping timeout: 252 seconds).
(19:29:20) Kundry_Wag left the room (quit: Remote host closed the connection).
(19:30:28) mikarch left the room (quit: Remote host closed the connection).
(19:52:51) rogorido [~user@2a02:810a:84c0:1f3c:3664:a9ff:fec5:4e21] entered the room.
(19:59:41) framling [~user@104.200.154.63] entered the room.
(20:00:35) fvaresi left the room (quit: Ping timeout: 240 seconds).
(20:00:49) Felix11H: For simplicity, I would still like to use C-u C-c C-l for "file:" links. How can I rebind this to something simpler, say C-c C-k? I wasn't able to find a function name for what C-u C-c C-l does.
(20:09:46) sachac: Try binding it to (lambda () (interactive) (insert (org-file-complete-link))) or something like that.
(20:15:24) sachac: or, for setting prefix args programmatically in general, (lambda () (interactive) (let ((current-prefix-arg '(4))) (call-interactively 'org-insert-link)))
(20:18:55) Felix11H: Thanks, I tried both, and got in both cases: "Wrong type argument: symbolp,". Any ideas?
(20:19:26) realitygaps left the room (quit: Ping timeout: 240 seconds).
(20:24:08) sachac: Felix11H: How are you binding it? (define-key org-mode-map (kbd "C-c C-k") (lambda ()
(20:24:09) sachac:          (interactive) (let ((current-prefix-arg '(4))) (call-interactively
(20:24:09) sachac:          'org-insert-link))))     <-- note, no ' before (lambda ...)
(20:26:29) realitygaps [~realityga@unaffiliated/realitygaps] entered the room.
(20:32:47) xvx left the room (quit: Read error: No route to host).
(20:33:06) jeapostrophe [~jay@racket/jeapostrophe] entered the room.
(20:34:44) Felix11H: I tried with  (local-set-key (kbd "C-c C-2") (lambda () (interactive) (let ((current-prefix-arg '(4))) (call-interactively 'org-insert-link)))) added as an org-mode hook. I'm not sure if this was a good idea and could have worked! 
(20:35:40) Felix11H: With your version I get "Symbol's value as variable is void: org-mode-map". Seems I have to enable org-mode-map somehow? I'm on org-mode 8.3.3!
(20:41:45) sachac: Felix11H: Oh yeah, org-mode-map needs to happen after org mode has loaded by using eval-after-load or something like the wonderful use-package package.
(20:42:12) sachac: Felix11H: But yeah, local-set-key in an org-mode-hook should be fine too.
(20:43:25) p_l left the room (quit: Remote host closed the connection).
(20:50:25) Demosthenex left the room (quit: Ping timeout: 260 seconds).
(20:51:38) Felix11H: Argh, can't seem to figure out how. I've looked through your dotfiles as well, but couldn't find the right command. 
(20:52:13) Felix11H: Does the code you posted work in your configuration?
(20:52:53) sachac: Felix11H: Hmm. A somewhat overkill option might be to (package-initialize) (require 'org) (define-key ....) in your config. This loads Org from the package you installed, and then requires it.
(20:53:38) sachac: Felix11H: After org is required, org-mode-map will be available.
(20:54:52) sachac: Felix11H: Org has been loaded by the time my config runs, so that might be why you can't find an equivalent - I just refer to org-mode-map, since it's already been defined.
(20:55:44) Felix11H: Ah, yes! That works now, thanks! So I'm back at the old error, I think:
(20:55:44) felipedvorak left the room (quit: Remote host closed the connection).
(20:55:44) sachac: (err, by the time my Sacha.org config runs, that is.)
(20:56:12) Felix11H: "apply: Wrong type argument: symbolp, (lambda nil (interactive) (let ((current-prefix-arg (quote (4)))) (call-interactively (quote org-insert-link))))"
(20:56:26) felipedvorak [~hur@unaffiliated/felipedvorak] entered the room.
(20:57:18) rogorido left the room (quit: Remote host closed the connection).
(20:57:35) thomasfuston left the room (quit: Remote host closed the connection).
(20:58:54) sachac: Felix11H: Hmm, that's strange, I'm not sure how you get that error. Can you pastebin or lisppaste that part of your config?
(21:00:04) sachac: Felix11H: Note that if you're adding something to an org-mode-hook, it should be a function - so if you're using local-set-key, you'll need to wrap it in yet another lambda: (add-hook 'org-mode-hook (lambda () (local-set-key ...)))
(21:00:20) sachac: Felix11H: (At this point, I usually get annoyed and start naming functions with defun, or just use org-mode-map. ;) )
(21:00:30) xvx [~xvx@83.137.254.128] entered the room.
(21:00:41) sachac: err, a lambda or a symbol of a function
(21:01:52) sachac: ... and if you happen to have old org-mode-hook entries around, you may need to remove them or even setq org-mode-hook back to nil or something.
(21:02:13) wilornel [~ubuntu@ec2-54-68-25-61.us-west-2.compute.amazonaws.com] entered the room.
(21:02:16) wilornel: How can I make org-mode respect the auto-fill variable?
(21:03:35) Demosthenex [~Demosthen@5ED25635.cm-7-3b.dynamic.ziggo.nl] entered the room.
(21:05:37) sachac: wilornel: Do you mean automatically turning on auto-fill-mode? See the first Emacs Lisp line in http://tychoish.com/posts/org-mode-snippets/
(21:07:12) Felix11H: Sacha, thank you, you were absolutely right. I removed everything from init.el but what was needed to execute your code and it works. Now I'll try to find the culprit!
(21:07:19) jeapostrophe left the room (quit: Ping timeout: 260 seconds).
(21:07:59) wilornel: Hmm I just eval'ed the first line you mentioned (`(add-hook 'org-mode-hook 'turn-on-auto-fill)
(21:08:29) wilornel: ), without any results. What I am looking to do is that whenever I edit my org-mode file, the lines wrap as if I were to M-q
(21:08:47) wilornel: (it's awesome to speak to you by the way!)
(21:09:04) sachac: wilornel: Right. That only adds it to org-mode-hook; you'll need to reinitialize org-mode in a file for that hook to be run if you already had a file open.
(21:10:08) sachac: Felix11H: Yeah, that can be a challenge with hooks and anonymous functions! <laugh> This is where it can be handy to have something like a (defun my/org-mode-setup () ...) that you then (add-hook 'org-mode-hook 'my/org-mode-setup), because then you can change the definition of my/org-mode-setup as often as you'd like.
(21:10:28) iclon left the room (quit: Quit: Leaving).
(21:10:45) sachac: wilornel: Probably rerunning M-x org-mode in an org-mode file will run the hooks, and you can check if it will then fill as you like.
(21:11:29) wilornel: hmmm I tried this earlier. I also just tried adding the hook to the end of my init file, re-launching emacs and editing my org file again and still no luck
(21:11:49) wilornel: I can see my vertical line and I can change its location using C-x f
(21:13:05) sachac: wilornel: Oh, maybe I don't quite understand what you're trying to do. First, are you trying to get auto-fill-mode to turn on automatically?
(21:13:14) wilornel: Also, if I run M-q on any heading, it won't wrap. If I run M-q on the text under a heading, it will wrap but in a weird way (probably because of the indent-mode)
(21:13:35) wilornel: sachac: I am trying to get the headings to wrap after they reach column 72
(21:13:37) Felix11H: So, it seems to clash with ido. Specifically, the setting "ido-everywhere t". Sadly, I do need this one :(
(21:14:01) sachac: wilornel: Oh... That's different. <laugh> Headings don't wrap, because that breaks Org Mode.
(21:14:22) sachac: Felix11H: Hmm, that's strange. What clashes?
(21:15:31) sachac: wilornel: I don't know if you can get visual-line-mode working with visual-fill-column (MELPA package), but that might be worth a try instead.
(21:15:58) sachac: wilornel: That way, the text doesn't actually have extra newlines in the file, but it displays wrapped.
(21:16:14) Felix11H: Sorry, I can't tell you more than disabling this line makes the keybinding work. Otherwise I get error from above. Is there something more I can do to backtrace the problem?
(21:17:02) wilornel: Ah! Alright let me read into this for a bit. Yes that was the effect I was looking to do. I know (I think that? I think I saw that minutes ago, my memory is failing me atm) that if I set the emacs window small enough, the lines will wrap
(21:17:18) sachac: Felix11H: Sorry, I don't use ido-everywhere, so I'm not sure. Is it a matter of picking a different keybinding? What happens when it doesn't work?
(21:18:07) wilornel: (Yes I can confirm that if the width is small enough the lines will wrap. Looking at how to do this using the auto-fill column)
(21:21:02) jeapostrophe [~jay@pool-98-110-248-55.bstnma.fios.verizon.net] entered the room.
(21:21:02) jeapostrophe left the room (quit: Changing host).
(21:21:02) jeapostrophe [~jay@racket/jeapostrophe] entered the room.
(21:22:16) Felix11H: With ido-everywhere enabled, I get the error message "apply: Wrong type argument: symbolp, (lambda nil (interactive) (let ((current-prefix-arg (quote (4)))) (call-interactively (quote org-insert-link))))" anytime I press the key combinations. Binding it to different keys doesn't seem to help, I tried for example "C-c C-i" as well.
(21:23:34) sachac: Felix11H: Hmm, try the org-file-complete-link version instead, maybe?
(21:24:03) wilornel: Alright, visual-fill-column-mode seems to just be hiding the text that is past the fill-column
(21:25:03) Felix11H: Same error message :(
(21:25:42) sachac: wilornel: Hmm, looks like there might be some weirdness with that anyway: https://lists.gnu.org/archive/html/emacs-orgmode/2015-11/msg00232.html
(21:25:52) sachac: wilornel: I'm not sure if what you want is doable, so it might be good to ask the mailing list.
(21:25:56) jeapostrophe left the room (quit: Ping timeout: 246 seconds).
(21:25:59) framling left the room (quit: Remote host closed the connection).
(21:26:43) sachac: Felix11H: Hmm, likewise, might be time to ask the mailing list in case someone else has a clever idea.
(21:27:28) Felix11H: Yeah, I guess that's pretty specific to my setup! Thank you for your help!  
(21:27:47) Felix11H: Is there a general way to map specific keybindings. It would be easy for me, if I could get "C-c C-k" just to invoke "C-u C-c C-l".

** fancy bullet points?



* completed

** org-mode

*** added additional language for source block syntax highlighting
: (add-to-list 'org-src-lang-modes (cons "Dockerfile" 'dockerfile))
uses ~dockerfile-mode~ to fontify "begin_src Dockerfile" blocks

*** color syntax highlighting in asynchronous exports
When using async export, inline css syntax highlighting did not work. The solution was to switch to css highlighting by setting 
: (setq org-html-htmlize-output-type 'css)
in the ~export_init.el~.
For this, css highlighting defintions are needed. The added css can be imported from ~styles.css~ and can be generated by
: M-x org-html-htmlize-generate-css

More info: [[http://emacs.stackexchange.com/questions/31439/][emacs.stackexchange.com/question]], [[https://lists.gnu.org/archive/html/emacs-orgmode/2014-01/msg00646.html][lists.gnu.org]]

*** inline code ": xxx" should be +red+ orange instead of yellow
What I
: this should be red!
in themes/ set 
: (org-code ((,class (:foreground ,orange))))

*** org-publish in the background
to publish an org-mode project in the background - that is without locking Emacs - the argument ~:ASYNC~ can be passed

: (org-publish "nb-org" :ASYNC t)

For this ~export-async-init-file.el~ needs to be created and pointed to. It should load org-mode and have all global export related settings.

Also note that publishing a project with _components_ in the asynchronous does *not* seem to work!

**** IRC question
I have multiple org-projects set up that I export to HTML using org-publish. Each time I publish, a process takes over which jumps through some buffers and resets the pointer in my current buffer. That's a bit troublesome, since I use org-publish very frequently. Is there any way I can run org-publish completely in the background? 

**** pastebin-out
http://pastebin.com/4pYqzbZH


*** encrypt org files
Using OpenGPG. Save the file as ~protected_file.org.gpg~. 
To settings are used:

1. Prevent Emacs from a graphical popup window to enter passphrase
#+BEGIN_SRC 
(defadvice epg--start (around advice-epg-disable-agent activate)
  (let ((agent (getenv "GPG_AGENT_INFO")))
    (setenv "GPG_AGENT_INFO" nil)
    ad-do-it
    (when (not (display-graphic-p))
      (setenv "GPG_AGENT_INFO" agent))))
#+END_SRC

2. Enable caching so that passphrase doesn't have to be entered for writing to files
: (setq epa-file-cache-passphrase-for-symmetric-encryption t)


*** open file: links with correct apps
customize ~org-file-apps~. Do
: M-x customize-variable RET org-file-apps
to see the current values. Note that this doesn't work for file+sys: links! Here's the current setup:
#+BEGIN_SRC 
(add-hook 'org-mode-hook
      '(lambda ()
         (setq org-file-apps
           '((auto-mode . emacs)
             ("\\.mm\\'" . default)
             ("\\.x?html?\\'" . default)
             ("\\.pdf\\'" . "okular %s")
	     ("\\.png\\'" . "okular %s")
	     ("\\.jpg\\'" . "okular %s")
	     ))))
#+END_SRC

*** local no-flyspell
#+BEGIN_SRC 
# -*- eval:(flyspell-mode -1) -*-
#+END_SRC
expand via "nofly".

*** org-mode color for LaTeX fragments
from yellow to blue. Use
#+BEGIN_SRC 
M-x customize-group RET org-faces RET
#+END_SRC
to identify the org-face to change, then add in color theme. Here:
#+BEGIN_SRC 
(org-latex-and-related ((t (:foreground ,blue))))
#+END_SRC

*** for emacs: file:projects.org::*task title heading search in Org file
Yes, this works! The syntax
#+BEGIN_SRC 
file:project.org::*headline title
#+END_SRC
is correct, where "headline title" is the title of *any* headline. The number of stars in the link, however, remains the single star.

*** org-cycle-separators
controls when empty lines are shown in folded subtrees. 
#+BEGIN_SRC elisp
(setq org-cycle-separator-lines 1)
#+END_SRC
See [[https://www.gnu.org/software/emacs/manual/html_node/org/Headlines.html][manual]] and [[https://www.reddit.com/r/orgmode/comments/3c4xdk/spacing_between_items_when_trees_are_folded/cssojh4][reddit post]].


*** org-mode and Jekyll

I followed the following tutorial: [[http://orgmode.org/worg/org-tutorials/org-jekyll.html][org-jekyll]] on orgmode.org.

Other interesting ideas and resources were:
 - [[http://acaird.github.io/computers/2013/05/24/blogging-with-org-and-git/][http://acaird.github.io/]]
 - [[https://github.com/eggcaker/jekyll-org][github.com/eggcaker/jekyll-org]]
 - [[https://github.com/tjaartvdwalt/jekyll-org-mode-converter][jekyll-org-mode-converter]]

*** org-mode comments
# achieved with '#'. Also possible to use
~code~ tags, achieved with '~' for better visual presentation

*** open links in new buffers
#+BEGIN_SRC elisp
;; don't split the frame when following links,
;; open in new buffer instead
(setq org-link-frame-setup
  (quote (
    (vm . vm-visit-folder-other-frame)
    (vm-imap . vm-visit-imap-folder-other-frame)
    (gnus . org-gnus-no-new-news)
    (file . find-file)
    (wl . wl-other-frame)))
  )
#+END_SRC

*** org export to markdown?
This is not needed and I haven't further looked into this.

*** org buffer startup unfolded
#+BEGIN_SRC elisp
;; other options are: nofold, fold, content
(setq org-startup-folded 'showeverything)
#+END_SRC

** org-projects

*** run command (python script) after publishing project
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-c C-1")
  (lambda () (interactive)
    (org-publish "nb")
    (start-process-shell-command "mass_replace_nb" nil "python"
                                 "~/nb/opt/tools/mass_replace.py")
  )
)
#+END_SRC

Alternative?: 
#+BEGIN_SRC elisp
org-publish-after-export-hook   (when going through org-publish)
#+END_SRC 

** org-ref
installed a huge(!) number of dependencies for org-ref:
 - (dash "2.11.0")
 - (helm "1.5.5") 
 - (helm-bibtex "2.0.0") 
 - (ivy "0.8.0") 
 - (hydra "0.13.2") 
 - (key-chord "0") 
 - (s "1.10.0")
 - (f "0.18.0")
 - (emacs "24.4")
 - (pdf-tools "0.7")

** Searching/Completion with IDO

Reference: [[https://www.reddit.com/r/emacs/comments/3o36sc/what_do_you_prefer_ido_or_helm/][Reddit post]]

*** ido
*** ido-ubiqtuoues
*** ido-vertical-mode
*** flx-ido
I don't know if I want to keep using this...

** Keybindings

[[http://www.gnu.org/software/emacs/manual/html_node/emacs/Key-Bindings.html][emacs manual]]: customizing keybindings, but ended up using ~bind-key~ package, so to make

#+BEGIN_SRC elisp
;; bind-key* creates minor modes so that these keybindings are truly 
;; global, overwriting definitions from all other modes

(bind-key* "C-l" 'switch-to-buffer)
#+END_SRC

*** new movement key bindings
C-f: forward (default)
C-k: backward (new)
C-n: down (default)
C-i: up (new)

*** Emacs top of buffer Keyboard-Shortcut
Bound to C-c C-a and C-c C-e!

*** enabled C-n C-p for ido-vertical

*** new buffer selection keys
#+BEGIN_SRC 
(bind-key* "C-n" 'previous-buffer)
(bind-key* "C-i" 'next-buffer)
#+END_SRC

*** shortcuts for top, dev_ops & sci_ops.org
#+BEGIN_SRC elisp
(bind-key* "C-c a" (lambda() (interactive)(find-file "~/admin/top.org")))
(bind-key* "C-c s" (lambda() (interactive)(find-file "~/sci/main/sci_ops.org")))
(bind-key* "C-c d" (lambda() (interactive)(find-file "~/dev/dev_ops.org")))
#+END_SRC

** Package installers

*** MELPA

The reference for getting started with [[http://melpa.org/#/getting-started][MELPA]]. Since I'm on Emacs 24, I
used
#+BEGIN_SRC lisp
(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)
#+END_SRC

to add MELPA. (!) But only after running ~M-x package-list-packages~,
was I able to find and install packages from the MELPA archives.


** Color themes

*** [NOT IN USE] emacs-solarized by Greg Pfeil

Install solarized color-theme from [[https://github.com/sellout/emacs-color-theme-solarized][GitHub]]

#+BEGIN_SRC lisp
(add-to-list 'custom-theme-load-path "~/.emacs.d/emacs-color-theme-solarized")
(customize-set-variable 'frame-background-mode 'dark)
(load-theme 'solarized t)
#+END_SRC

I like Purcell's a bit better


*** [NOT IN USE] bbatsov/solarized-emacs

from [[https://github.com/bbatsov/solarized-emacs][bbatsov/solarized-emacs]]: ~M-x package-install
solarized-theme~. Requires MELPA.

I don't like this one as much as Steve Purcell's.

*** sanityinc-tomorrow

#+BEGIN_SRC 

#+END_SRC

*** sanityinc-solarized


** yasnippets

To create new yasnippet:
  1. ~M-x yas-new-snippet~
  2. pick name with the syntax: lowercase-separated-by-dash
  3. Use $1,$2,.. as tab stops, $0 is the exit point
  4. Use C-c C-c to create and save the snippet - pick the appropriate mode!
  5. If the yasnippet hasn't yet been activated in the mode you want it to work, add the hook to the init file:
     ~(add-hook 'org-mode-hook #'yas-minor-mode)~

Use key-TAB to try out the snippet.

Existing snippets:

*** latex beamer complete frame ~nf2~
*** sci/nb header ~nb~
*** .gitignore latex type ~latex~
*** jekyll-front-matter ~jfm~
[[file:snippets/org-mode/jekyll-front-matter][yasnippet]]

** general

*** fixed issue where large files only display ?? line numbers
Added to init.el
: (setq line-number-display-limit-width 2000000)
